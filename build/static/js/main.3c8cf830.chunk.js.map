{"version":3,"sources":["App.js","index.js"],"names":["server","socket","io","App","useState","username","setUsername","roomCode","setRoomCode","roomJoined","setRoomJoined","useEffect","on","console","log","msg","id","Title","Chat","StartPage","login","setLogin","signUp","setSignUp","loggedIn","setLoggedIn","overlayRef","useRef","Main","className","onClick","e","target","current","ref","Login","setUserName","SignUp","join","setJoin","code","joinRoom","emit","toString","EnterRoomCode","setCode","onSubmit","preventDefault","type","name","value","onChange","str","length","strArr","split","i","includes","isString","usernameInput","passwordInput","password","fetch","then","data","json","res","status","htmlFor","autoComplete","string","from","messages","setMessages","setMsg","tempArr","push","Message","Input","style","width","map","message","index","sender","placeholder","class","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c8cf830.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst server = \"https://mdhchat.herokuapp.com\";\r\nconst socket = io(server);\r\nexport default function App() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [roomJoined, setRoomJoined] = useState(false);\r\n  useEffect(() => {\r\n    socket.on(\"roomCreated\", (username, roomCode) => {\r\n      // setRoomCreated(true);\r\n      setRoomJoined(false);\r\n      setRoomCode(roomCode);\r\n    });\r\n    socket.on(\"roomJoined\", (username, roomCode) => {\r\n      console.log(\"joined\");\r\n      // setRoomCreated(false);\r\n      setRoomJoined(true);\r\n      setRoomCode(roomCode);\r\n    });\r\n    socket.on(\"error\", (msg) => console.log(msg));\r\n  }, [socket]);\r\n\r\n  if (roomJoined) {\r\n    return (\r\n      <div id=\"chat\">\r\n        <Title></Title>\r\n        <Chat\r\n          socket={socket}\r\n          username={username}\r\n          roomCode={roomCode}\r\n          setRoomCode={setRoomCode}\r\n        ></Chat>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <StartPage\r\n      // socket={socket}\r\n      username={username}\r\n      setUsername={setUsername}\r\n      roomCode={roomCode}\r\n      setRoomCode={setRoomCode}\r\n      setRoomJoined={setRoomJoined}\r\n    ></StartPage>\r\n  );\r\n}\r\n\r\nfunction StartPage({ setRoomJoined, setRoomCode, setUsername, username }) {\r\n  const [login, setLogin] = useState(false);\r\n  const [signUp, setSignUp] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  // const [username, setUsername] = useState(\"\");\r\n  const overlayRef = useRef(null);\r\n\r\n  if (loggedIn) {\r\n    return (\r\n      <Main\r\n        username={username}\r\n        setRoomJoined={setRoomJoined}\r\n        setRoomCode={setRoomCode}\r\n      ></Main>\r\n    );\r\n  }\r\n  return (\r\n    <div id=\"mainContainer\">\r\n      {!login || (\r\n        <div\r\n          className=\"overlay\"\r\n          onClick={(e) => {\r\n            if (e.target === overlayRef.current) {\r\n              setLogin(false);\r\n            }\r\n          }}\r\n          ref={overlayRef}\r\n        >\r\n          <Login setLoggedIn={setLoggedIn} setUserName={setUsername}></Login>\r\n        </div>\r\n      )}\r\n      {!signUp || (\r\n        <div\r\n          className=\"overlay\"\r\n          onClick={(e) => {\r\n            if (e.target === overlayRef.current) {\r\n              setSignUp(false);\r\n            }\r\n          }}\r\n          ref={overlayRef}\r\n        >\r\n          <SignUp setSignUp={setSignUp} setLogin={setLogin}></SignUp>\r\n        </div>\r\n      )}\r\n      <Title></Title>\r\n      <div id=\"buttons\">\r\n        <button\r\n          onClick={() => {\r\n            setLogin(true);\r\n            setSignUp(false);\r\n          }}\r\n        >\r\n          LOGIN\r\n        </button>\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            setSignUp(true);\r\n            setLogin(false);\r\n          }}\r\n        >\r\n          SIGN UP\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Main({ username, setRoomJoined, setRoomCode }) {\r\n  const [join, setJoin] = useState(false);\r\n  const createRoom = () => {\r\n    socket.emit(\"create\", username);\r\n  };\r\n  useEffect(() => {\r\n    socket.on(\"roomCreated\", (username, code) => {\r\n      joinRoom(code);\r\n    });\r\n  });\r\n  const joinRoom = (code) => {\r\n    // fetch(`${server}/joinRoom?u=${username}&code=${code}`)\r\n    //   .then((data) => {\r\n    //     return data.json();\r\n    //   })\r\n    //   .then((res) => {\r\n    //     if (res.status === \"ok\") {\r\n    //       setRoomJoined(true);\r\n    //     }\r\n    //   });\r\n    console.log(username, code);\r\n    socket.emit(\"join\", username, code.toString());\r\n  };\r\n  const handleJoinRoom = () => {\r\n    setJoin(true);\r\n  };\r\n  return (\r\n    <div id=\"mainContainer\">\r\n      {!join || (\r\n        <EnterRoomCode\r\n          setJoin={setJoin}\r\n          setRoomCode={setRoomCode}\r\n          joinRoom={joinRoom}\r\n        ></EnterRoomCode>\r\n      )}\r\n      <Title></Title>\r\n      <div id=\"buttons\">\r\n        <button onClick={handleJoinRoom}>Join Room</button>\r\n        <button onClick={createRoom}>Create Room</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction EnterRoomCode({ setJoin, setRoomCode, joinRoom }) {\r\n  const [code, setCode] = useState(\"\");\r\n  const overlayRef = useRef(null);\r\n  const isString = (str) => {\r\n    if (str.length > 4) {\r\n      return true;\r\n    }\r\n    const strArr = str.split(\"\");\r\n    for (let i = 0; i < str.length; i++) {\r\n      if (\r\n        ![\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].includes(strArr[i])\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  return (\r\n    <div\r\n      className=\"overlay\"\r\n      onClick={(e) => {\r\n        if (e.target === overlayRef.current) {\r\n          setJoin(false);\r\n        }\r\n      }}\r\n      ref={overlayRef}\r\n    >\r\n      <div>\r\n        <div>Room Code</div>\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            setJoin(false);\r\n            setRoomCode(code);\r\n            joinRoom(code);\r\n          }}\r\n        >\r\n          {/* <label htmlFor=\"roomCode\">Room Code</label> */}\r\n          <input\r\n            type=\"text\"\r\n            name=\"roomCode\"\r\n            value={code}\r\n            onChange={(e) => {\r\n              if (!isString(e.target.value)) {\r\n                setCode(e.target.value);\r\n              }\r\n            }}\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Login({ setLoggedIn, setUserName }) {\r\n  const usernameInput = useRef(null);\r\n  const passwordInput = useRef(null);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const username = usernameInput.current.value;\r\n    const password = passwordInput.current.value;\r\n    fetch(`${server}/login?u=${username}&p=${password}`)\r\n      .then((data) => {\r\n        return data.json();\r\n      })\r\n      .then((res) => {\r\n        if (res.status === \"ok\") {\r\n          setUserName(username);\r\n          setLoggedIn(true);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <div>LOGIN</div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"username\">Username:</label>\r\n        <br />\r\n        <input\r\n          name=\"username\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          ref={usernameInput}\r\n        ></input>\r\n        <br />\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <br />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          autoComplete=\"off\"\r\n          ref={passwordInput}\r\n        ></input>\r\n        <br />\r\n        <button type=\"submit\">submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SignUp({ setSignUp, setLogin }) {\r\n  const usernameInput = useRef(null);\r\n  const passwordInput = useRef(null);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const username = usernameInput.current.value;\r\n    const password = passwordInput.current.value;\r\n    fetch(`${server}/signup?u=${username}&p=${password}`)\r\n      .then((data) => {\r\n        return data.json();\r\n      })\r\n      .then((res) => {\r\n        if (res.status === \"ok\") {\r\n          setLogin(true);\r\n          setSignUp(false);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <div>Signup</div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"username\">Username:</label>\r\n        <br />\r\n        <input\r\n          name=\"username\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          ref={usernameInput}\r\n        ></input>\r\n        <br />\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <br />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          autoComplete=\"off\"\r\n          ref={passwordInput}\r\n        ></input>\r\n        <br />\r\n        <button type=\"submit\">submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Chat({ socket, roomCode, username }) {\r\n  const string = `room code = ${roomCode}`;\r\n  console.log(roomCode);\r\n  const [messages, setMessages] = useState([\r\n    { from: username, msg: `${string}` },\r\n  ]);\r\n\r\n  const [msg, setMsg] = useState(\"\");\r\n  useEffect(() => {\r\n    socket.on(\"msg\", (res) => {\r\n      const { username, msg } = res;\r\n      console.log(\"recieved\", username, msg);\r\n      const tempArr = messages;\r\n      tempArr.push({ from: username, msg: msg });\r\n      setMessages([...tempArr]);\r\n      console.log(messages);\r\n    });\r\n  }, [socket, messages]);\r\n  const sendMsg = (e) => {\r\n    e.preventDefault();\r\n    if (msg !== \"\") {\r\n      console.log(\"sent\", username, msg);\r\n      socket.emit(\"msg\", roomCode, msg, username);\r\n    }\r\n    setMsg(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Message messages={messages} username={username}></Message>\r\n      <form onSubmit={sendMsg}>\r\n        <Input msg={msg} setMsg={setMsg}></Input>\r\n\r\n        <button\r\n          className=\"btn\"\r\n          style={{ width: \"clamp(0px, 100%, 100%)\" }}\r\n          type=\"submit\"\r\n        >\r\n          Send\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Message({ messages, username }) {\r\n  return (\r\n    <div id=\"messages\">\r\n      {messages.map((message, index) => {\r\n        let sender = \"\";\r\n        if (message.from === username) {\r\n          sender = \"You\";\r\n        } else {\r\n          sender = message.from;\r\n        }\r\n        console.log(message.msg);\r\n        return (\r\n          <div className=\"msg\" key={index}>{`${sender}: ${message.msg}`}</div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Input({ msg, setMsg }) {\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"input\"\r\n        value={msg}\r\n        onChange={(e) => setMsg(e.target.value)}\r\n        placeholder=\"Message\"\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Title() {\r\n  return <div class=\"title\">MDHCHT</div>;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}